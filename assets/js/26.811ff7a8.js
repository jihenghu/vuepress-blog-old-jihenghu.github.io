(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{358:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#概况"}},[t._v("概况")])]),a("li",[a("a",{attrs:{href:"#演示文件说明"}},[t._v("演示文件说明")])]),a("li",[a("a",{attrs:{href:"#数据库"}},[t._v("数据库")])]),a("li",[a("a",{attrs:{href:"#数据说明"}},[t._v("数据说明")])]),a("li",[a("a",{attrs:{href:"#建议"}},[t._v("- 建议")])]),a("li",[a("a",{attrs:{href:"#鸣谢"}},[t._v("鸣谢")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"概况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概况"}},[t._v("#")]),t._v(" 概况")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("地区：")]),t._v(" "),a("div",{staticClass:"language-fortran line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-fortran"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("!!!\t specify ROI domain.")]),t._v("\n            latS   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n            latN   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),t._v("\n            lonW   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("70")]),t._v("\n            lonE   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("145")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])])]),t._v(" "),a("img",{staticStyle:{width:"500px",height:"300px"},attrs:{src:"https://ws1.sinaimg.cn/large/005zDzHply1g47q2thpmsj31660wlqn5.jpg",alt:"Elevation of ROI",align:"center"}}),t._v(" "),a("ul",[a("li",[a("p",[t._v("采用的数据：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("数据集 dataset")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("用途")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("时间跨度")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("a",{attrs:{href:"https://nsidc.org/data/AE_L2A/versions/3/print/",target:"_blank",rel:"noopener noreferrer"}},[t._v("AMSR-E / AE-L2A"),a("OutboundLink")],1)]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("TB，Land flag, Scantime")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1 June 2002 to 4 October 2011")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("a",{attrs:{href:"https://nsidc.org/data/AE_Rain#",target:"_blank",rel:"noopener noreferrer"}},[t._v("AMSR-E / AE-Rain"),a("OutboundLink")],1)]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("surface Rain rate")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1 June 2002 to 4 October 2011")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("a",{attrs:{href:"https://modis-atmosphere.gsfc.nasa.gov/products/cloud",target:"_blank",rel:"noopener noreferrer"}},[t._v("MOD06-L2"),a("OutboundLink")],1)]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("cloud properties(CFR, LWP, CPI, CTT....)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2002- present")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("a",{attrs:{href:"https://apps.ecmwf.int/datasets/data/era20c-daily/levtype=sfc/type=an/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ERA-20C"),a("OutboundLink")],1)]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("LST, LSP, T2m, Atmospheric profiles, WND")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1900 - 201012")])])])]),t._v(" "),a("p",[t._v("所以最终采用的时间跨度是200207~201012")])]),t._v(" "),a("li",[a("p",[t._v("通道信息：")]),t._v(" "),a("p",[t._v("AMSR-E的两个分辨率")]),t._v(" "),a("p",[a("code",[t._v("res1")]),t._v(" 为最新反演的地表微波比辐射率数据，第1个分辨率对应的卫星像斑直径为56km，格点距离10km\n"),a("code",[t._v("res3")]),t._v(" 为最新反演的地表微波比辐射率数据，第3个分辨率对应的卫星像斑直径为21km，格点距离10km")]),t._v(" "),a("p",[t._v("res1的12个通道分别为：\n6.925v, 6.925h, 10.65v, 10.65h, 18.7v, 18.7h, 23.8v, 23.8h, 36.5v, 36.5h, 89.0v, 89.0h 单位GHz")]),t._v(" "),a("p",[t._v("res3的8个通道：\n18.7v, 18.7h, 23.8v, 23.8h, 36.5v, 36.5h, 89.0v, 89.0h 单位GHz")])])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"演示文件说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#演示文件说明"}},[t._v("#")]),t._v(" 演示文件说明")]),t._v(" "),a("p",[t._v("位置："),a("code",[t._v("MLSE.CN.v2/MLSE.CN.v2.Doc/Demo")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("+ 2a.res1             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###   预处理AE-L2a参数    ")]),t._v("\n+ 2a.res3             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###    预处理AE-L2a参数    ")]),t._v("\n+ 2b                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###      预处理AE-Rain参数    ")]),t._v("\n+ 06                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###      预处理云参数 ")]),t._v("\n+ 20c                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###        预处理ERA参数   ")]),t._v("\n+ collocate.res1             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###       融合上述四种数据")]),t._v("\n+ collocate.res3             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###      融合上述四种数据")]),t._v("\n+ retrieve.res1             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###        反演")]),t._v("\n+ retrieve.res3             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###        反演")]),t._v("\n+ mwrt                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 包含MWRT安装包和安装使用说明")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("???.res1是第一个分辨率的处理路径，???.res3是第三个分辨率的处理。对于这两者，2b，06和20c都是一样的。")]),t._v(" "),a("p",[t._v("RES1 和RES3 大体上的反演过程是一样的，但是后者处理的通道要更少，云平均半径也较小。")]),t._v(" "),a("p",[a("strong",[t._v("处理顺序")]),t._v(" ：")]),t._v(" "),a("p",[t._v("步骤一：2a, 2b, 06和20c均为四种数据的预处理路径，彼此独立，无执行顺序；")]),t._v(" "),a("p",[t._v("步骤二：collocation用于融合上述四种数据，在第一部之后执行；")]),t._v(" "),a("p",[t._v("步骤三：retrieve使用的是collocation的输出结果，在第二部之后执行；")]),t._v(" "),a("p",[t._v("后期处理：筛选陆地比例 landflag，匹配云信息")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库"}},[t._v("#")]),t._v(" 数据库")]),t._v(" "),a("p",[t._v("位置："),a("code",[t._v("MLSE.CN.v2/MLSE.CN.v2")]),t._v(" ###可能会移动位置")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("res1.data.land80   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 直接反演出来的MLSE产品，但是由于landflag在80%以上，且不包含landflag参数")]),t._v("\nres1.data.land98   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 后期处理得到的 landflag>98%的样本，且包含landflag参数")]),t._v("\nres.cloud.land80  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##和res1.data.land80配套的云参数")]),t._v("\n\nres3.data.land80  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 直接反演出来的MLSE.res3")]),t._v("\nres3.data.land98  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 后期处理得到的 landflag>98%的样本，且包含landflag参数")]),t._v("\nres3.cloud.land80 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##和res3.data.land80配套的云参数")]),t._v("\nsrc               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###初次数据库反演时的工作路径，部分数据包含为删除的中间产物")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("如何进行陆地面积筛选和匹配云信息，请参考最后一章：后期处理。")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"数据说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据说明"}},[t._v("#")]),t._v(" 数据说明")]),t._v(" "),a("p",[t._v("产品数据一般包含：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ip   integer型 每个AMSR-E数据点所拥有的唯一ID；  \nnewl integer型 样本对应的大气廓线层数；  \n\nqc   integer型 cloud quality control ：  \n           qc = 0 ;clear sky\n           qc = 1 ; pure water cloud   \n           qc = 2 ; pure ice cloud  \n           qc = 3 ; mixed cloud exist  \n           qc = 4 ; uncertain cloud exist  \n\nlon  float 经度；  \nlat  float 纬度；  \n\ncwc  float 云液态水柱积分 g/cm2  手动计算；  \ncic  float 云冰水柱积分   g/cm2  手动计算；  \ntw1  float 云液态水柱积分 g/cm2  模式输出；  \ntw2  float 云冰水柱积分   g/cm2  模式输出；  \n\nlst  float  地表温度 k；  \nt2m  float  两米温度 k；  \n\nstime  float   扫描时间 hr （UTC）；  \nlandflag  float  陆地分数 0-100；  \n\ntb    float(12) 12个通道天顶亮温观测；  res3是8个通道\nmlse  float(12) 12个通道地表微博比辐射率反演结果； res3是8个通道\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br")])]),a("hr"),t._v(" "),a("h2",{attrs:{id:"建议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建议"}},[t._v("#")]),t._v(" - 建议")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("对于几种需要读取NC文件和HDF文件的产品，预处理是用的是NCL程序，虽然计算速度满足要求，说到底NCL还是慢，对于H-8的读写会比较明显，尤其是ncl的格式化输出，所以我大部分采用的是调用fortran写出。再加上同时使用两种语言来做反演实在有些不好，建议把ncl代码重构成fortran,语法方面很类似，重点是fortran需要安装netcdf库来支持对nc和hdf格式的读写。另外，ncl的维护支持已经停止了，未来会向python库方向发展，但是使用python绘图和处理数据内有纯粹的ncl简单快捷，所以，ncl还是可以继续使用的，版本不会再更新了，至于ncar的tutorial是否会关闭不清楚，实在不行可以做一个镜像。")])]),t._v(" "),a("li",[a("p",[t._v("开始一系列的反演之前，必须要明确需求，需要的MLSE精确度是多少，如何融合几种不同的产品需要提前做好设计，多写写画画轨道、网格这些东西有注意理解。数据产品的参数要足够明白：轨道宽度、网格参数、分辨率、是否太阳同步、表面入射角、产品时间寿命等。")])]),t._v(" "),a("li",[a("p",[t._v("规划反演时间")]),t._v(" "),a("p",[t._v("就我看来，无论是预处理还是数据融合，时间都够快，两天之内完成足矣，但是要学会对几年的数据进行分段处理，比如前期的数据预处理和collocate部分时间一般分为半年或一年一个段就够了。")]),t._v(" "),a("p",[t._v("但是，retrieve过程需要消耗很长时间，每天的数据量反演在6小时以上不等，需要分段跑。第二版的反演设置的反演分段是一个月一个段，8年共分102（月）段，提交102个后台任务，每个服务器node发布24个，使用了")]),t._v(" "),a("p",[t._v("​           （node00）24个+ （node01）24个+（node03）24个+（node04）24个+（node05）6个 进程")]),t._v(" "),a("p",[t._v("单个月的反演耗时：  9 hr/day  *30 day =240 hr = 12天左右 ，所以你的反演计划要在2周左右，如果机器出问题，比如断电，你可以保留每月跑好的数据，重新提交剩下的日子。这些时间都是在0.001精度要求下的，如果你最求高精度，那会慢一些。")])]),t._v(" "),a("li",[a("p",[t._v("学会提高程序效率：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("限制程序运行的效率的关键在于读写。如果你的程序设计成频繁的读写，那么就不适合做多进程并发运行，每个程序都在频繁读写，磁盘读写会出现阻塞。")])]),t._v(" "),a("li",[a("p",[t._v("带参方式批量")]),t._v(" "),a("p",[t._v("不要在脚本内部进行日期循环批量处理，这样很可能会导致变量无法释放，每次循环新建新的对象，导致内存泄漏，最后报错"),a("code",[t._v("segment fault")]),t._v("。这种批量最好使用NCL的带参方式运行，fortran的带参方式运行，python和java同样都支持带参方式。你可以新建一个shell脚本对日期进行循环，使用带参方式调用NCL或者fortran，这样实现日期循环，每次调用结束，ncl或者fortran会销毁，内存自动释放。")])]),t._v(" "),a("li",[a("p",[t._v("使用空间换取时间")]),t._v(" "),a("p",[t._v("如果你喜欢使用如下的边读边写的编程风格：")]),t._v(" "),a("div",{staticClass:"language-fortran line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-fortran"}},[a("code",[t._v("       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'read.me.txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'write.me.txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("read")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("401")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("goto")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("401")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("你会发现这种程序不适合做并发，所谓并发就是类似的多个进程一起运行(注意不是并行)。这些进程都会频繁的读写每一行记录，导致彼此竞争硬盘的读写资源（I/O）。")]),t._v(" "),a("p",[t._v("其实cpu资源远远满足需求，内存也足够。这种时候，你需要设置a,b,c的大数组，一次性读入将文件中的记录读入内存，然后使用循环对数组的元素进行遍历处理，输出也要一次性输出。这样，多个进程就会间歇性读写，并且彼此错开，大部分的时候都在使用cpu进行并发运算。一个retrieve反演持续8个小时，只有最开始的一分钟和最后的一分钟在读写，对个进程完全不会阻塞。而如果用实时读写的方式，会一直读写，一直竞争，一直阻塞，时间恐怕要几倍长。")])])])]),t._v(" "),a("li",[a("p",[t._v("在进行长期反演之前，应该先选取个例进行反演，你需要做的是跑通个例和诊断：")]),t._v(" "),a("p",[t._v("应该画出12个通道的天顶亮温，反演出来的12通道的MLSE，考察数据合理性，为什么有的区域没有反演出现缺测，是什么原因导致的要清楚：无非就是水体、有降水发生、没有云观测，没有降水观测。MLSE 的空间分布特征是否合理，通道之间的差异和特征是否合理等，都是你要考察的方面。")])]),t._v(" "),a("li",[a("p",[t._v("模式跑起来最容易出错的是参数的配置，数量级，单位都是很重要的，一定要有耐心去debug。")])]),t._v(" "),a("li",[a("p",[t._v("！！！！！使用这套数据的时候千万不要覆盖了原始数据库，把read语句错误的写成write语句就可以轻松覆盖掉数据库，所以，当你复制代码后，别忘了检查这一点，不然你就要重新反演了。")])])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"鸣谢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#鸣谢"}},[t._v("#")]),t._v(" 鸣谢")]),t._v(" "),a("p",[t._v("感谢李锐老师的指导和帮助。感谢刘国胜老师、王雨老师、孙亮老师提供的宝贵意见和帮助。")]),t._v(" "),a("p",[t._v("感谢刘进军、郭竞超、邵文程、符玉云和韩涛各位师兄的指导和思路，大家在一起讨论了很多解决方案。")]),t._v(" "),a("p",[t._v("©jihenghu 2019")])])}),[],!1,null,null,null);s.default=e.exports}}]);